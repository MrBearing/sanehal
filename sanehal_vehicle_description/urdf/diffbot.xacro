<?xml version="1.0" encoding="UTF-8"?>
  <robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- ロボットの表示を行う本体部分 -->
    <xacro:macro name="diffbot" params="prefix parent *origin">
    <!-- Constants for robot dimensions -->
    <xacro:property name="PI" value="3.1415926535897931"/>
    <xacro:property name="base_mass" value="2.0" /> <!-- arbitrary value for base mass -->
    <xacro:property name="base_width" value="0.30750" /><!-- x -->
    <xacro:property name="base_length" value="0.268" /><!-- y -->
    <xacro:property name="base_height" value="0.45542" /> <!-- z -->

    <xacro:property name="wheel_mass" value="0.100" /> <!-- arbitrary value for wheel mass -->
    <xacro:property name="wheel_len" value="0.020" />
    <xacro:property name="wheel_radius" value="0.03925" /> <!-- = 0.0785/2 -->
    <xacro:property name="wheel_x_offset" value="0.12525" />
    <xacro:property name="caster_wheel_mass" value="0.03" /> <!-- arbitrary value for caster wheel mass -->
    <xacro:property name="caster_wheel_x_offset" value="-0.09175" /> <!-- arbitrary value for caster wheel mass -->
    <xacro:property name="caster_wheel_radius" value="0.020" />
    <xacro:property name="z_offset" value="-0" /> <!-- Space btw top of beam and the each joint -->
    <!-- add sensor file  -->
    <xacro:include filename="$(find ldlidar_stl_description)/urdf/ld19.xacro" />


    <!-- Base Link -->
    <link name="${prefix}sanehal_base_link">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${base_width} ${base_length} ${base_height}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
        <geometry>
          <box size="${base_width} ${base_length} ${base_height}"/>
        </geometry>
        <material name="blue"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${base_mass}"/>
        <inertia
          ixx="${base_mass / 12.0 * (base_length*base_length + base_height*base_height)}" ixy="0.0" ixz="0.0"
          iyy="${base_mass / 12.0 * (base_height*base_height + base_width*base_width)}" iyz="0.0"
          izz="${base_mass / 12.0 * (base_width*base_width + base_length*base_length)}"/>
        </inertial>
    </link>

    <!-- Lidar sensor-->
    <xacro:ld19
      parent="${prefix}sanehal_base_link"
      prefix="${prefix}"
      sensor_range_visible="false">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:ld19>

    <!-- left wheel Link -->
    <link name="${prefix}left_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
        </geometry>
        <material name="black"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia
          ixx="${wheel_mass / 12.0 * (3*wheel_radius + wheel_len*wheel_len)}" ixy="0.0" ixz="0.0"
          iyy="${wheel_mass / 12.0 * wheel_radius*wheel_radius}" iyz="0.0"
          izz="${wheel_mass / 12.0 * wheel_radius*wheel_radius}"/>
        </inertial>
    </link>

    <!-- right wheel Link -->
    <link name="${prefix}right_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <geometry>
          <cylinder length="${wheel_len}" radius="${wheel_radius}"/>
        </geometry>
        <material name="grey"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
        <mass value="${wheel_mass}"/>
        <inertia
          ixx="${wheel_mass / 12.0 * (3*wheel_radius + wheel_len*wheel_len)}" ixy="0.0" ixz="0.0"
          iyy="${wheel_mass / 12.0 * wheel_radius*wheel_radius}" iyz="0.0"
          izz="${wheel_mass / 12.0 * wheel_radius*wheel_radius}"/>
        </inertial>
    </link>

    <!-- caster rear wheel Link -->
    <link name="${prefix}caster_rear_wheel">
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_wheel_radius}"/>
        </geometry>
        <material name="white"/>
      </visual>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="${caster_wheel_mass}"/>
        <inertia
          ixx="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" ixy="0.0" ixz="0.0"
          iyy="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}" iyz="0.0"
          izz="${caster_wheel_mass * 0.4 * (caster_wheel_radius * caster_wheel_radius)}"/>
        </inertial>
    </link>

    <!-- joints -->

    <joint
        name="${prefix}base_joint"
        type="fixed">
      <parent link="${parent}" />
      <child link="${prefix}sanehal_base_link" />
      <xacro:insert_block name="origin" />
    </joint>

    <joint name="${prefix}left_wheel_joint" type="continuous">
      <parent link="${prefix}sanehal_base_link"/>
      <child link="${prefix}left_wheel"/>
      <origin xyz="${wheel_x_offset} ${base_width/2} ${z_offset}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="0.2"/>
    </joint>

    <joint name="${prefix}right_wheel_joint" type="continuous">
      <parent link="${prefix}sanehal_base_link"/>
      <child link="${prefix}right_wheel"/>
      <origin xyz="${wheel_x_offset} -${base_width/2} ${z_offset}" rpy="0 0 ${PI}"/>
      <axis xyz="0 1 0"/>
      <dynamics damping="0.2"/>
    </joint>

    <joint name="${prefix}caster_rear_wheel_joint" type="fixed">
      <parent link="${prefix}sanehal_base_link"/>
      <child link="${prefix}caster_rear_wheel"/>
      <origin xyz="${-base_width/2 + caster_wheel_radius} 0 ${z_offset}" rpy="0 0 0"/>
    </joint>
  </xacro:macro>



</robot>
